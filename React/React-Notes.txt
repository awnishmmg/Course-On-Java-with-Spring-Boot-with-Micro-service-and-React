We have to start our session in React JS:-
React :- it is stack of MERN 

M : mongodb 
E : Express JS 
R : React Js 
N : Node Js 

1. All these are Technology of Javascript.
2. Pre-requistic you must little bit javascript.
3. html and css is Must.

in Javascript :-
1. Basic 
	1. loops,decision loops, let const,var 
	2. functions, arrow functions, Events
	3. dom manupulations 
	3. callback, Higher order functions,Anonymous functions 
	4. local storage, scope resolutions 
	5. promises, async,await and fetch api.
	
	1. https://developer.mozilla.org/en-US/docs/Web/JavaScript (Best| Time constraint)
	2. https://javascript.info (straight to the point)
	

React JS : Multiple Tech stack.
React JS : Front end Framework (Js library facebook(Meta))

Backend : Python + Django/Fask 
Front End : React Js 

Java : Backend(java with Spring Boot,Microservice Rest Api)
Front End : React Js 

Framework other then React Js :-
===============================
Angular/React/Vuejs/Svelet Js/Alpine JS/Angular Js.

Important React about React:-
1. React is front end framework (library.)
2. SPA based Application (SPA : Single Page Application)
   Eg : MPA : multi page applicaiton 
   
   Multiple pages -> single index.html -> React use for its internal purpose.
   
   in case java with jsp:-
   About.jsp 
   gallery.jsp 
   contact.jsp
   home.jsp
   
   Application heavy -> front Architecture : MPA Based (Multi page application)
   Multiple Pages/ Load Time/Performance effect.
   
   In React we have single index.html 
   All the Views as written as logic in form class or functions.
   -About.js -> class or functions
   -gallery.js -> class or functions
   -contact.js -> class or functions
   -home.js  -> class or functions
    
	The Application Logic which you write in Js in form class and functions 
	is only component.
	
	consider we want make a website 
	1. gallery.html
	2. home.html
    3. About.html
	4. contact.html
	5. service.html
	
	The core of the React is component based Architecture.
	Now since there no page, hence memory will also will not be consumed.
	
3. React works on the basis of 2 concepts.
   1. JSX 
   2. Virtual DOM.
   
  what is JSX ?
  Jsx : Javascript + XML  = React Code 
  XML : Extensible Markup langauge somehting like html.
  
  html works in readymade tags 
  xml works on the basis custom or user defined.
  
  DOM :- 
  Javascript object based : Ready Made Object
  Java object oriented : Custom Object.
  
  Javascript (Vanilla Js):-
  ============================
  2 main Object 
  1. BOM : Browser Object Model 
		 window.alert()
		 window.confirm()
		 window.prompt()
		 ...
		 ...
  2. DOM : Document Object Model 
		1. Tags,forms Elements,urls...
		
		<!doctype html>
		<html>
			<head>
			</head>
			<body>
				<h1> Hello world</html>
			</body>
		</html>
      All the Tags are recognised by the,Browser.
      -Browser can be firebox,chrome,(Safari,MS Edge),Opera,Brave
	  All these tags are real tags and indetified by browser.
	  browser will occupy memory as well.
	  
	  React -> Js but also we can xml (<AWNISH></AWNISH>)
	  Awnish Tag : it is not real Tag.
	  it will create a virtual DOM 
	  and will not occupy any memory.
	  
	  
			Browser 
			  |
		Window Object 
	          |
          Document 
             |
            html
       --------------
       |             |
     Head	        body	
   
	window.oncontextmenu = function(){
       return false;
    }
	
	concept of virtual DOM:-
	======================
	I dont know React How can I implement My Virtual Dom in Javascript?
	
	
	https://www.youtube.com/watch?v=jwOW-qlJtxg&list=PLsyeobzWxl7rrvgG7MLNIMSTzVCDZZcT4&index=25
	https://www.youtube.com/playlist?list=PLsyeobzWxl7qtP8Lo9TReqUMkiOp446cV
	
	How to work with React:-
    =========================
	1. to work with React your system must have Node Installed.
	2. Front end what Node Js has to with React.
	
	M : mongodb  =>database => javascript
	E : Express JS => Backend => Framework => JavaScript
	R : React Js => JavaScript => frontend Framework.
	N : Node Js => Javascript Runtime Environment 
				   Node Js is called as server side runtime environment.
				   you can execute the code of javascript without browser.
				   
				   

	 Full Stack developmenet (using Javasctipt Technology) = Front end (JS) + Backend (Js)
	 Backend = Server Side Environment + Database 
			   (Node Js)				(Mongodb)
			   
	 before 2008'v javascript used to be in Browser but now,
	using node js you run javascript code outside browser.
	
	https://nodejs.org/en
	1. LTS : Long term support -> stable version
	2. current version : latest version
	
	1. How to check if node is install or not 
	node --version 
	
	2. node comes with anothe tool which is called npm : node package manager
	npm --version
	
	what is importance of npm:-
   ================================
   if you want donwload the package or some library or framework
   we will npm 
   
   commands :-
   npm install express 
   npm install mongoose 
   npm install react-dom 
   npm install choclaty
   
   npm uninstall express 
   npm uninstall mongoose 
   npm uninstall react-dom 
   npm uninstall choclaty
	
	install is of 2 types 
	1. local installation 
		1- it a project speicific.
		node packages 
	2, global installation 
		once install need to not require another.
		
		when ever you install a package a speicial folder called node_modules are generated.
		node_modules : All the liquired tools and library and functions, using 
		which you can build any application, react, node ,express...
		
		
	  react is a front end what relation it has with node js.
	  1. react library donwload using npm 
	  2. react is build upon node js code base.
	  
	  node js -> server side environment -> server -> on the top of server we have built react.
	  
	  
	  Building
		 |
	  pillars 
	  
	  
	  Front App (SPA)
			|
		   React
	        |
		Server of Node (server.js)
		    |
		Node Runtime Environment
		1. node.exe itself 
		2. npm.exe package manager => package install/uninstall
		
	  
	  How to create our server using Node Js:-
	  ========================================
	  1. npm init -y 
			package.json
	  2. npm run start : node server.js 
	  
	  
	 steps:-
	 How to set up complete frontend application using, Node Js :-
	 ===============================================================
	M : mongodb : database
	E : Express JS : backend framework of node js 
	R : React Js : front end framework
	N : Node Js : server side runtime environment.

	Q1: How many ways can you reach lucknow to delhi
	1. via Barelly (8 to 9 hours)
	2. via Etewah (8 to 9 hours)
	3. via Agra-yamuna Express (6 hours.)
	
	Express way : Express way 
	Journey : shorted time cover 
	1. no speed breaker.
	2. 5 to 6 hours you will be here.
	
	we can create server using node js 
	but we write lot of code and take of time.
	we need some way,
	hence Express package is like express highway
	to write Backend application in Node Js less line of 
	code and super fast  and in very less time.
	
	
	steps :-
	1. intialise the project or node app 
	  at root folder -> server.js 
	  cmd:/> npm init -y 
	  
	2. install express package 
	   npm cache clean --force
	   npm install express 	
	
	
    3. After you install your express 3 main changes are done 
	1. node_modules : main folder where all requires packages is installed.
						|
						express 
		How to verify express install:-
		cmd:/> npm ls express 
		-- express@5.1.0
	2. package.json 
			{
			dependencies : {
				express : 5.1.0
				}
			}
		
	3. package.lock.json 
	
	what is difference b/w package.json and package.lock.json 
	package.json : version : modify 
	in order keep version of application stabled we need package.lock.json 
	
	tommorrow express version can change or not.
	npm install express => latest @9.x 
	Todays date what is version : 5.x 
	
	Application -> 5.x 
	express ->9.x 
	my code will give error.
	
	there should some way so that we can keep application 
	version stable.
	so we lock the version of packages(dependencies)
	package.lock.json 
	
	
	App /static -> Part
		1. public : index.html 
		2. src : components.
		
	frontend 
		1. static application 
		2. dynamic applications.
		
		
		

		
	
	
	
	
	
	
	
	
	
		

	
	
	
	
	
	
	
	
	